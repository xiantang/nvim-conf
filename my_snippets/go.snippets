snippet func "Snippet for function declaration"
	func ${1}(${2}) ${3} {
	    ${0}
	}

snippet for "Snippet for a pure for loop"
	for ${1} {
	    ${0}
	}

snippet fori "Snippet for a for loop"
	for ${1:i} := ${2:0}; ${1} < ${3:count}; ${1}${4:++} {
	    ${0}
	}

snippet forr "Snippet for a for range loop"
	for ${1:_, }${2:v} := range ${3:v} {
	    ${0}
	}

snippet map "Snippet for a map"
	map[${1:type}]${2:type}

snippet tf "Snippet for Test function"
	func Test${1}(t *testing.T) {
	    ${0}
	}

snippet make "Snippet for make statement"
	make(${1:type}, ${2:0})

snippet if "Snippet for if statement"
	if ${1:condition} {
	    ${0}
	}

snippet el "Snippet for else branch"
	else {
	    ${0}
	}

snippet sw "switch"
	switch ${1:var} {
	case ${2:value1}:
		${3}
	case ${4:value2}:
		${5}
	default:
		${0}
	}

snippet ife "Use the statement before the if condition"
	if err != nil {
	    return err
	}

snippet stru "struct"
	type ${1} struct {
	    ${2}
	}

snippet inter "interface"
	type ${1} interface {
	    ${2}
	}

snippet sli "slice literal"
	${1} := []${2}{${3}}

snippet gorm "Snippet for struct gorm tag"
	\`gorm:"${1}"\`

snippet mockr "mock and return"
		mockey.Mock(${1:text}).Return(${2:text}).Build()

snippet mockt "mock and To"
		mockey.Mock(${1:text}).To(${2:text}).Build()
